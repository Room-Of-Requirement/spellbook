name: Test
on:
  push:
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        k3s: [latest, v1.21, v1.20, v1.19, v1.18]
    name: K3s ${{matrix.k3s}}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
    
    - uses: nolar/setup-k3d-k3s@v1
      with:
        k3d-args: --servers 3 --no-lb
        version: ${{ matrix.k3s }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    
    - run: kubectl get nodes
    
    - name: Setup Flux CLI
      uses: fluxcd/flux2/action@main
      
    - run: flux check --pre
    - run: flux check
    - run: flux install
    
    - run: echo $SOPS_PRIVATE_KEY | kubectl create secret generic sops-gpg --namespace=flux-system --from-file=sops.asc=/dev/stdin
      env:
        SOPS_PRIVATE_KEY: ${{ secrets.SOPS_PRIVATE_KEY }}
        
    - name: Setup cluster reconciliation
      run: |
        flux create source git flux-system \
        --url=${{ github.event.repository.html_url }} \
        --branch=${GITHUB_REF#refs/heads/}
        
    - run: |
        flux create kustomization flux-system \
        --source=flux-system \
        --path=./cluster/base \
        --decryption-provider=sops \
        --decryption-secret=sops-gpg
    - name: Verify cluster reconciliation
      run: |
        kubectl -n flux-system wait kustomization/infrastructure --for=condition=ready --timeout=5m
        kubectl -n flux-system wait kustomization/apps --for=condition=ready --timeout=5m
    - name: Verify helm reconciliation
      run: |
        kubectl -n nginx wait helmrelease/nginx --for=condition=ready --timeout=5m
        kubectl -n redis wait helmrelease/redis --for=condition=ready --timeout=5m
        kubectl -n podinfo wait helmrelease/podinfo --for=condition=ready --timeout=5m
    - name: Debug failure
      if: failure()
      run: |
        kubectl -n flux-system get all
        kubectl -n flux-system logs deploy/source-controller
        kubectl -n flux-system logs deploy/kustomize-controller
        kubectl -n flux-system logs deploy/helm-controller
        flux get all --all-namespaces
