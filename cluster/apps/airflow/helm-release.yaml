apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: postgresql
  namespace: airflow
spec:
  interval: 1m
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: postgresql
      version: 11.1.8
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      interval: 1m
  values:
    global:
      storageClass: "cephfs"
      imageRegistry: quay.io
    postgresqlDatabase: ${AIRFLOW_POSTGRES_DATABASE_NAME}
    postgresqlUsername: ${AIRFLOW_POSTGRES_DATABASE_USER}
    postgresqlPassword: ${AIRFLOW_POSTGRES_DATABASE_PASSWORD}

---

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: airflow
  namespace: airflow
spec:
  interval: 1m
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: airflow
      version: 12.0.13
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      interval: 1m
  values:
    executor: KubernetesExecutor # CeleryExecutor

    global:
      imageRegistry: quay.io

    env:
      TZ: America/Chicago

    externalDatabase:
      host: postgresql.airflow.svc.cluster.local
      port: 5432
      database: ${AIRFLOW_POSTGRES_DATABASE_NAME}
      user: ${AIRFLOW_POSTGRES_DATABASE_USER}
      password: ${AIRFLOW_POSTGRES_DATABASE_PASSWORD}

    postgresql:
      enabled: false

    # externalRedis:
    #   host: redis.airflow.svc.cluster.local
    #   port: 6379
    #   password: {{ .Values.airflow.redis.password }}

    redis:
      enabled: false

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        uroperator.brennerm.github.io/monitor.type: HTTPS
      tlsSecretName: airflow-cert
      hosts:
      - name: af.roomofrequirement.xyz
        path: "/"
        tls: true
        tlsSecret: airflow-cert

    auth:
      forcePassword: true
      password: ${AIRFLOW_PASSWORD}
      username: jack
      fernetKey: ${AIRFLOW_FERNET_KEY}

    worker:
      image:
        registry: quay.io
      resources:
        limits:
          cpu: 400m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 50Mi

    scheduler:
      image:
        registry: quay.io
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 200m
          memory: 256Mi

    rbac:
      create: true

    serviceAccount:
      create: true

    config: |
      [kubernetes]
      namespace = airflow

    git:
      image:
        registry: quay.io
      dags:
        enabled: true
        repositories:
        - repository: https://github.com/jmmaloney4/dags.git
          branch: main
          name: dags
          path: "./"
